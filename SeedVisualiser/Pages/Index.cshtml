@page
@model IndexModel
@{
	ViewData["Title"] = "HASTE Shard Layout Viewer";
}

<div id="upload-area">
	Drag & drop, paste an image, or click to select a file to scan a QR code from the shard map.
</div>
<input type="file" id="file-input" accept="image/*" style="display: none;" />

<script type="module">
	const uploadArea = document.getElementById("upload-area");
	const fileInput = document.getElementById("file-input");

	// Trigger file picker on click
	uploadArea.addEventListener("click", () => fileInput.click());

	// Hidden input handler
	fileInput.addEventListener("change", (e) => {
	  if (e.target.files.length > 0) {
		handleFile(e.target.files[0]);
	  }
	});

	// Drag & drop
	uploadArea.addEventListener("dragover", (e) => {
	  e.preventDefault();
	  uploadArea.classList.add("dragover");
	});

	uploadArea.addEventListener("dragleave", () => {
	  uploadArea.classList.remove("dragover");
	});

	uploadArea.addEventListener("drop", (e) => {
	  e.preventDefault();
	  uploadArea.classList.remove("dragover");
	  const file = e.dataTransfer.files[0];
	  if (file) handleFile(file);
	});

	// Ctrl+V paste
	window.addEventListener("paste", (e) => {
	  const items = e.clipboardData.items;
	  for (const item of items) {
		if (item.type.startsWith("image/")) {
		  const file = item.getAsFile();
		  if (file) handleFile(file);
		}
	  }
	});

	// QR Code handler
	async function handleFile(file) {
	  if (!file.type.startsWith("image/")) {
		alert("Please upload a valid image file.");
		return;
	  }

	  try {
		const { default: QrScanner } = await import('/lib/qr-scanner.min.js');

		const result = await QrScanner.scanImage(file, { returnDetailedScanResult: false });
		const data = JSON.parse(result.data);
		console.log(data);
		window.location.href = `/shards/${data.shardID}/${data.seed}.png`;
	  } catch (error) {
		console.error("No QR code found:", error);
		alert("No QR code found in the image.");
	  }
	}
</script>


<div class="labeled-hr">
	<hr>
	<span>or</span>
	<hr>
</div>

<form id="seedForm">
	<fieldset>
		<legend>Layout Options</legend>
		<div>
			<label for="shard_id">Shard ID</label>
			<small>The first shard has ID 0.</small>
			<input type="number" name="shard_id" id="shard_id" placeholder="Shard ID" min="0" max="9" value="0">
		</div>
		<div>
			<label for="seed">Seed</label>
			<input type="number" name="seed" id="seed" placeholder="Seed" min="0" max="4294967295">
		</div>
	</fieldset>
	<div class="submit-container">
		<button type="submit">Generate shard layout</button>
	</div>
</form>
<hr />

<p>Here's how to find the seeds that you have played previously:</p>

<ol>
    <li>Find your Haste log folder:<br>On Windows, press <kbd>Win</kbd>+<kbd>R</kbd> and paste <code class="copy">%userprofile%\AppData\LocalLow\Landfall\Haste</code>, then press <kbd>Enter</kbd>.<br>On Linux, the file is at <code class="copy">~/.config/unity3d/Landfall/Haste/</code>.<br>On macOS, the file is at <code class="copy">~/Library/Logs/Landfall/Haste</code>.</li>
    <li>Open the <code>Player.log</code> file with a text editor.</li>
    <li>Search for <code class="copy">Starting new run with ShardID</code> to find all the seeds you have played.</li>
    <li>The most recent seed is at the bottom of the file.</li>
</ol>

<script>
	document.getElementById("seedForm").addEventListener("submit", function(event) {
		event.preventDefault();
		let seed = Number(document.getElementById("seed").value);
		let shard_id = Number(document.getElementById("shard_id").value);
		window.location.href = `/shards/${shard_id}/${seed}.png`;
	});
</script>
